name: BuildAndTest

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build:
    name: "Build and Test"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Setup .NET
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '6.0.x'
      - name: Restore dependencies
        run: dotnet restore
      - name: Build
        run: dotnet build --no-restore
      - name: Unit Tests
        run: dotnet test tests/GeoLocator.UnitTests --no-build --verbosity normal
      - name: Integration Tests
        run: dotnet test tests/GeoLocator.IntegrationTests --no-build --verbosity normal
      - name: Functional Tests
        run: dotnet test tests/GeoLocator.FunctionalTests --no-build --verbosity normal

  infra:
    runs-on: ubuntu-latest
    env:
      WORKING_DIRECTORY: './Terraform'
      ARM_CLIENT_ID: ${{ secrets.TF_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.TF_CLIENT_SECRET }}
      ARM_TENANT_ID: ${{ secrets.TF_TENANT_ID }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.TF_SUBSCRIPTION_ID }}
    
    steps:
      - uses: actions/checkout@v2
          
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_wrapper: false
        
      - name: Terraform Init
        run: terraform init
        working-directory: ${{ env.WORKING_DIRECTORY }}
        
      - name: Terraform Validate
        run: terraform validate -no-color
        working-directory: ${{ env.WORKING_DIRECTORY }}

      - name: Terraform Plan
        id: plan
        if: github.event_name == 'pull_request'
        run: terraform plan -no-color
        continue-on-error: true
        working-directory: ${{ env.WORKING_DIRECTORY }}
            
      - name: Terraform Plan Status
        if: steps.plan.outcome == 'failure'
        run: exit 1
          
      - name: Terraform apply
        if: github.ref == 'refs/heads/master' && github.event_name == 'push'
        run: terraform apply -auto-approve 
        working-directory: ${{ env.WORKING_DIRECTORY }}